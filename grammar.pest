// although we don't use pest for now, this file follows its convention
// https://pest.rs/
// based on https://craftinginterpreters.com/appendix-i.html

alpha = { 'a'..'z' | 'A'..'Z' }
digit = { '0'..'9' }
number = {digit ~ "."? ~ (digit)*}
text = {"\"" ~  (!"\"" ~ ANY)* ~ "\""}
identifier = {  alpha ~ (alpha | digit)* }

stmt = { exprStmt | forStmt | ifStmt | printStmt | requireStmt | returnStmt | whileStmt }

// declarations
declaration = { classDecl | funcDecl | varDecl | stmt }
classDecl = {"class" ~ identifier ~ ("extends" ~ identifier)? ~ "{" ~ funcDecl* ~ "}" }
funcDecl = {"fun" ~ identifier ~ "(" ~ (identifier ~ ("," ~identifier)*)? ~ ")" ~ block }
varDecl = {"var" ~ identifier ~ ("=" expr)? ~ ";"}

//Stmt
exprStmt = {expression ~ ";"}

// aux
block = { "{" ~ declaration ~"}" }

// Program
program = declaration* ~ EOF 